name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create environment file
      run: |
        cat > .env << EOF
        SECRET_KEY=test-secret-key-for-ci
        DEBUG=True
        POSTGRES_DB=test_db
        POSTGRES_USER=test_user
        POSTGRES_PASSWORD=test_password
        DB_NAME=test_db
        DB_USER=test_user
        DB_PASSWORD=test_password
        DB_HOST=localhost
        DB_PORT=5432
        REDIS_HOST=localhost
        REDIS_PORT=6379
        REDIS_URL=redis://localhost:6379/0
        ALLOWED_HOSTS=localhost,127.0.0.1,testserver
        EOF

    - name: Run migrations
      run: |
        python manage.py migrate

    - name: Run tests
      run: |
        python manage.py test

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: success()

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install SSH dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y openssh-client

    - name: Copy files to remote server using rsync
      run: |
        # Создаем директорию на сервере
        ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} \
          "mkdir -p /home/${{ secrets.SERVER_USER }}/app"
        
        # Копируем файлы с исключениями
        rsync -avz \
          --exclude='.git' \
          --exclude='.github' \
          --exclude='__pycache__' \
          --exclude='*.pyc' \
          --exclude='.pytest_cache' \
          --exclude='venv' \
          --exclude='.env' \
          -e "ssh -o StrictHostKeyChecking=no" \
          ./ \
          ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:/home/${{ secrets.SERVER_USER }}/app/

    - name: Deploy on remote server
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd /home/${{ secrets.SERVER_USER }}/app
          docker compose down
          docker compose up -d --build
          sleep 10
          docker compose exec web python manage.py migrate --noinput
          docker compose exec web python manage.py collectstatic --noinput